$fn=60;
jarDia=80;
jarHght=80;
beamDia=15;
wallThck=2;
zSpcng=0.4; //z-spacing
ltSpcng=0.5; //lateral spacing
hingeWdth=18;
beamAng=50;
screwDia=3.6;
screwLngth=40;
fudge=0.1;

*mirror([0,0,1]) translate([0,0,-80])jar();

//intersection(){
  holder();
/*  translate([0,beamDia/2-fudge,0]) rotate(-beamAng) translate([(jarDia+beamDia)/2,0,100-35/2]) rotate(beamAng)  
    cube([beamDia+fudge,beamDia*2,35],true);
}*/

/* [Hidden] */
// QR code data for "https://www.thingiverse.com/thing:4376943" (29 x 29)
// Generated by Altair's OpenSCAD QR Code Generator
// https://ridercz.github.io/OpenSCAD-QR/
qr_data = [[1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1],
           [1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1],
           [1,0,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,0,1],
           [1,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,1,1,0,0,0,1,0,1,1,1,0,1],
           [1,0,1,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,1],
           [1,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1],
           [1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1],
           [0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],
           [1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1],
           [1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0],
           [0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0],
           [0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,1,0,0,1],
           [1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1],
           [1,1,0,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,0,1,1,1,1,1],
           [1,1,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0,1,0,1,0,1,0,1,0,0,1,0,1],
           [0,0,0,1,1,0,0,1,1,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,1,0,1,0,1],
           [1,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0],
           [1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,1,0,0,0,1,0,1,1,0],
           [1,1,0,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,0,1,0,1,0,0,0,1,0,0,1],
           [1,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,1,0,0,1,1,1,0,1,1,1,1,0,0],
           [1,1,1,1,0,0,1,1,0,1,0,1,0,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0],
           [0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,1,1,0,1,0,0,0,1,1,0,0,0],
           [1,1,1,1,1,1,1,0,0,1,1,1,0,1,0,1,1,0,0,1,1,0,1,0,1,1,0,0,0],
           [1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,0,0,1,0,0,1,1],
           [1,0,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,1,0],
           [1,0,1,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,0,0,0,0,1],
           [1,0,1,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,0,0,0,1,0,1,1,0,1,1,1],
           [1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,1,1,0,1],
           [1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,1,0,0,0]];


// QR code rendering method
module qr_render(data, module_size = 1, height = 1) {
    maxmod = len(data) - 1;
    union() {
        for(r = [0 : maxmod]) {
            for(c = [0 : maxmod]) {
                if(data[r][c] == 1){
                    xo = c * module_size;
                    yo = (maxmod - r) * module_size;
                    translate([xo, yo, 0]) cube([module_size, module_size, height]);
                }
            }
        }
    }
}

module holder(){
  difference(){
    for(ir=[-1,1])
      rotate(ir*beamAng) translate([(jarDia+beamDia)/2,0,0]){
        difference(){
          cylinder(d=beamDia,h=jarHght); //beams
          translate([0,0,-fudge]) cylinder(d=screwDia,h=screwLngth); //screwhole
        }
        translate([0,0,jarHght]) 
          cylinder(d=beamDia-wallThck*2-ltSpcng*2,h=hingeWdth+wallThck); //hingePole
        translate([0,0,jarHght+hingeWdth]) cylinder(d=beamDia,h=wallThck); //hingeCap
        translate([0,0,jarHght+zSpcng]){
          difference(){ //hinge sleeves
            cylinder(d=beamDia,h=hingeWdth-zSpcng*2);
            translate([0,0,-zSpcng]) cylinder(d=beamDia-wallThck*2,h=hingeWdth);
            if (ir==1) rotate(90-beamAng){ //cut away on one side
              translate([-beamDia/2-fudge,-beamDia/2,-zSpcng])
                cube([beamDia/2+fudge,beamDia+fudge,hingeWdth]);
              translate([-fudge,-beamDia/2,-zSpcng])
                cube([beamDia/2+fudge,beamDia/2+fudge,hingeWdth]);
          }
          
          }
        }
      }//for
    }//diff
  difference(){
    hull() for(ir=[-1,1]) //latch
      rotate(ir*beamAng) translate([(jarDia+beamDia)/2,0,0])
        rotate(ir*(180-beamAng)) translate(([(beamDia-wallThck)/2,0,jarHght+zSpcng])) 
          cylinder(d=wallThck,h=hingeWdth-zSpcng*2);
     // Render QR code with default settings (module 1x1x1)
    *translate([23+1,29/4,jarHght+1.5]) rotate([90,0,-90]) qr_render(qr_data,0.5,1);
  }
  
  
  difference(){
    rotate(-beamAng) rotate_extrude(angle=beamAng*2) //wallMount
      translate([(jarDia/2),0,0]) square([beamDia,wallThck]);
    for(ir=[-1,1])
      rotate(ir*beamAng) translate([(jarDia+beamDia)/2,0,0])
        translate([0,0,-fudge]) cylinder(d=screwDia,h=screwLngth);
  }
}

module jar(){
  cylinder(d=80,h=80);
  translate([0,0,80]) cylinder(d=65,h=20);
}