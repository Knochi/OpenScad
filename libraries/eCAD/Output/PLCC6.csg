group() {
	color([1, 1, 0.941176, 1]) {
		difference() {
			multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1.3], [0, 0, 0, 1]]) {
				cube(size = [5, 6, 2.4], center = true);
			}
			multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1.5], [0, 0, 0, 1]]) {
				cylinder($fn = 50, $fa = 12, $fs = 2, h = 1.01, r1 = 1.6, r2 = 2, center = false);
			}
			multmatrix([[1, 0, 0, -2.5], [0, 1, 0, 3], [0, 0, 1, 2.3], [0, 0, 0, 1]]) {
				linear_extrude(height = 0.3, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
					polygon(points = [[0.8, 0.1], [-0.1, 0.1], [-0.1, -0.8]], paths = undef, convexity = 1);
				}
			}
		}
	}
	color([0.501961, 0.501961, 0.501961, 0.6]) {
		multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1.51], [0, 0, 0, 1]]) {
			cylinder($fn = 50, $fa = 12, $fs = 2, h = 0.99, r1 = 1.595, r2 = 1.995, center = false);
		}
	}
	color([0.752941, 0.752941, 0.752941, 1]) {
		group() {
			multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, -2.1], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
			multmatrix([[0, 1, 0, 0], [-1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, -2.1], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
			multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, 0], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
			multmatrix([[0, 1, 0, 0], [-1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, 0], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
			multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, 2.1], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
			multmatrix([[0, 1, 0, 0], [-1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
				multmatrix([[1, 0, 0, 2.1], [0, 1, 0, 2.5], [0, 0, 1, 0], [0, 0, 0, 1]]) {
					multmatrix([[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						multmatrix([[1, 0, 0, -0.35], [0, 1, 0, 0], [0, 0, 1, 0.1], [0, 0, 0, 1]]) {
							cube(size = [1.1, 1, 0.2], center = true);
						}
						multmatrix([[1, 0, 0, 0.1], [0, 1, 0, 0], [0, 0, 1, 0.45], [0, 0, 0, 1]]) {
							cube(size = [0.2, 1, 0.9], center = true);
						}
					}
				}
			}
		}
	}
}

